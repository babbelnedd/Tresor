DATENBANKEN:
===================================
Die Anwendung sollte mehrere Datenbanken verwalten können. Man könnte es als "Profile" deklarieren. 
Zum Beispiel ein Profil für "Beruf" ein Profil für "Privat" etc.
Allerdings könnte man diese auch in verschiedene Kategorien einteilen. 
Jedoch ist das abhängig davon ob der Benutzer verschiedene Passwörter für verschiedene Profile ("Kategorien") verwenden möchte.

Datenbanken müssen über die Anwendung (Menü / Drag&Drop evtl.) zu öffnen sein.
Eine Idee wäre der Datenbank spezifische Dateiendungen zu geben (*.tdb bspw.) um diese dann mit der Anwendung zu verknüpfen.


Eine Datenbank besteht aus Kategorien.
Eine Kategorie besteht aus Einträgen (Credentials).

Links in der Anwendung befindet sich eine Auflistung der Kategorien. Der rechte bzw. mittlere Teil beinhaltet die Einträge der Kategorie innerhalb eines TabControls o.ä.
Einzelne Einträge werden dann über weitere Tabs im TabControl geöffnet. 

SESSIONS:
===================================
Jede Kategorie hat eigene Tabs. Das bedeutet: Wenn ich Eintrag "FTP", ".htaccess" und "root" in der Kategorie Blog öffne und zu der Kategorie Spiele wechsel sind dort z.B. die Tabs "Smite", "LoL", "Diablo 3" geöffnet. 
Eine solche Session wird gespeichert. Das heißt: Wenn ich die Anwendung mit geöffneten Tabs schließe werden diese beim neuen Laden erneut geöffnet.
Um dies zu realisieren wird es sinnvoll sein die USERSETTINGS in der gleichen SQLite Datenbank wie der Datenbank für die Passwörter zu speichern.
Um nicht in Namenskonflikte zu kommen (Bsp. eine Tabelle der UserSettings heißt "Tabs" und jemand würde zufälligerweise ein gleichnamige Kategorie anlegen wollen) 
werden alle vom Benutzer angelegten Tabellen (z.Z. nur Kategorien) programmatisch mit einem Präfix versehen. Bspw. CAT_[Name])
Alternative: Gibt es in SQLite Namensräume wie in MSSQL bspw.?


USERSETTINGS:
===================================
Die UserSettings werden in einer Datenbank gespeichert. 
Die Settings werden aus verschiedenen Gründen in der gleichen Datenbank wie die Passwörter gespeichert:
	- Sicherheit: Wenn ich programmatisch die UserSettings erstellen würde wäre das Passwort durch dekompilieren der Anwendung leicht herauszufinden.
	- Um Settings leichter mit einer Datenbank (welche Passwörter speichert) zu verknüpfen.
UserSettings bestehen grundsätzlich nur aus Tabellen mit Key-Value Paaren um diese jederzeit problemlos zu erweitern und bestehende Datenbanken nicht unbrauchbar zu machen.


SPEICHERN:
===================================
Änderungen werden "instant" gespeichert. Das heißt es gibt keinen speichern Knopf. Wenn ich z.B. schreibe wird die Änderung "direkt" gespeichert. 


DATENBANKEN FELDER:
===================================
Jede Tabelle sollte mindestens folgende Spalten aufweisen:

RecordID		GUID			Eindeutige Kennung des Eintrags
Identity		Int				Inkrementeller Zähler
Created			DateTime		Erstellungsdatum
Modified		DateTime		Datum der letzten Änderung. NULLABLE

Wäre es interessant Computer- sowie Benutzernamen zu speichern? Für sowas wie CreatedBy / ModifiedBy.


DATENBANKEN SPEICHERN:
===================================
Wo sollen Datenbanken gespeichert werden?
Momentan sieht es danach aus als müsste der Benutzer den Ort selbst auswählen um die Anwendung einfach portabel zu benutzen.
Z.B. Auf einem USB Stick.